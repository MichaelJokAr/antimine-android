apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    defaultConfig {
        // versionCode and versionName must be hardcoded to support F-droid
        versionCode 603021
        versionName '6.3.2'
        applicationId 'dev.lucanlm.antimine'
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        resConfigs 'en', 'cs', 'de', 'es', 'fr', 'pt', 'ru', 'tr', 'vi', 'uk', 'zh'
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests {
            includeAndroidResources true
            animationsDisabled true
        }
    }

    flavorDimensions 'version'
    productFlavors {
        google {
            dimension 'version'
        }

        foss {
            dimension 'version'
        }
    }
}

dependencies {
    // Dependencies must be hardcoded to support F-droid

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common')

    googleImplementation project(':proprietary')
    fossImplementation project(':foss')

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Constraint
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Google
    implementation 'com.google.android.material:material:1.1.0'

    // Dagger
    api 'com.google.dagger:dagger-android:2.21'
    api 'com.google.dagger:dagger-android-support:2.21'
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    testImplementation 'com.google.dagger:dagger-android:2.21'
    testImplementation 'com.google.dagger:dagger-android-support:2.21'

    // Kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.5'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.5'

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test:core-ktx:1.2.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    testImplementation 'androidx.fragment:fragment-testing:1.1.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
    }
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
